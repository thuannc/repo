{
    
    "paths": {
        "/work": {},
        "/work/{id}": {},
        "/workSpecification": {},
        "/workSpecification/{id}": {},
    },
    "definitions": {
        "Characteristic": {
            "type": "object",
            "description": "Describes a given characteristic of an object or entity through a name/value pair.",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the characteristic"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the characteristic"
                },
                "valueType": {
                    "type": "string",
                    "description": "Data type of the value of the characteristic"
                },
                "characteristicRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CharacteristicRelationship"
                    }
                },
                "value": {
                    "$ref": "#/definitions/Any",
                    "description": "The value of the characteristic"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "CharacteristicRelationship": {
            "type": "object",
            "description": "Another Characteristic that is related to the current Characteristic;",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the characteristic"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "relationshipType": {
                    "type": "string",
                    "description": "The type of relationship"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "CharacteristicSpecification": {
            "type": "object",
            "description": "This class defines a characteristic specification.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique ID for the characteristic"
                },
                "configurable": {
                    "type": "boolean",
                    "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains the CharacteristicSpecification."
                },
                "extensible": {
                    "type": "boolean",
                    "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                },
                "isUnique": {
                    "type": "boolean",
                    "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                },
                "maxCardinality": {
                    "type": "integer",
                    "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                },
                "minCardinality": {
                    "type": "integer",
                    "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                },
                "name": {
                    "type": "string",
                    "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                },
                "regex": {
                    "type": "string",
                    "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                },
                "valueType": {
                    "type": "string",
                    "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                },
                "charSpecRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CharacteristicSpecificationRelationship"
                    },
                    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics."
                },
                "characteristicValueSpecification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CharacteristicValueSpecification"
                    },
                    "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which a characteristic is applicable."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@valueSchemaLocation": {
                    "type": "string",
                    "description": "This (optional) field provides a link to the schema describing the value type."
                }
            }
        },
        "CharacteristicSpecificationBase": {
            "type": "object",
            "description": "This class defines a characteristic specification.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique ID for the characteristic"
                },
                "configurable": {
                    "type": "boolean",
                    "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains the CharacteristicSpecification."
                },
                "extensible": {
                    "type": "boolean",
                    "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                },
                "isUnique": {
                    "type": "boolean",
                    "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                },
                "maxCardinality": {
                    "type": "integer",
                    "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                },
                "minCardinality": {
                    "type": "integer",
                    "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                },
                "name": {
                    "type": "string",
                    "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                },
                "regex": {
                    "type": "string",
                    "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                },
                "valueType": {
                    "type": "string",
                    "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which a characteristic is applicable."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@valueSchemaLocation": {
                    "type": "string",
                    "description": "This (optional) field provides a link to the schema describing the value type."
                }
            }
        },
        "CharacteristicSpecificationRelationship": {
            "type": "object",
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID.",
            "properties": {
                "characteristicSpecificationId": {
                    "type": "string",
                    "description": "Unique identifier of the characteristic within the specification"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the target characteristic within the specification"
                },
                "parentSpecificationHref": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference to the parent specification containing the target characteristic"
                },
                "parentSpecificationId": {
                    "type": "string",
                    "description": "Unique identifier of the parent specification containing the target characteristic"
                },
                "relationshipType": {
                    "type": "string",
                    "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period for which the object is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "CharacteristicValueSpecification": {
            "type": "object",
            "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic.",
            "properties": {
                "isDefault": {
                    "type": "boolean",
                    "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                },
                "rangeInterval": {
                    "type": "string",
                    "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                },
                "regex": {
                    "type": "string",
                    "description": "A regular expression constraint for given value"
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                },
                "valueFrom": {
                    "type": "integer",
                    "description": "The low range value that a characteristic can take on"
                },
                "valueTo": {
                    "type": "integer",
                    "description": "The upper range value that a characteristic can take on"
                },
                "valueType": {
                    "type": "string",
                    "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which a value is applicable."
                },
                "value": {
                    "$ref": "#/definitions/Any",
                    "description": "A discrete value that the characteristic can take on, or the actual value of the characteristic"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "RelatedWorkOrderItem": {
            "type": "object",
            "description": "RelatedWorkOrderItem (WorkOrder item). The work order item which triggered this unit of work's creation/change/termination.",
            "required": [
                "orderItemId",
                "workOrderId"
            ],
            "properties": {
                "orderItemAction": {
                    "type": "string",
                    "description": "Action of the order item for this unit of work\r\n"
                },
                "orderItemId": {
                    "type": "string",
                    "description": "Identifier of the work order item where the unit of work was managed"
                },
                "role": {
                    "type": "string",
                    "description": "Role of the work order item for this unitof work\r\n"
                },
                "workOrderHref": {
                    "type": "string",
                    "description": "Reference of the related entity."
                },
                "workOrderId": {
                    "type": "string",
                    "description": "Unique identifier of a related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "TargetEntitySchema": {
            "type": "object",
            "description": "The reference object to the schema and type of target entity which is described by a specification",
            "required": [
                "@schemaLocation",
                "@type"
            ],
            "properties": {
                "@schemaLocation": {
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                },
                "@type": {
                    "type": "string",
                    "description": "Class type of the target entity"
                }
            }
        },

        "Work": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "completionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order was completed"
                },
                "description": {
                    "type": "string",
                    "description": "Is the description of the work unit. It could be the same as the description of the work specification."
                },
                "expectedCompletionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the requester expects the work to be completed"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the work unit. It could be the same as the name of the work specification."
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date at which the work order which triggered this unit of work's creation/change/termination was created."
                },
                "percentageComplete": {
                    "type": "number",
                    "format": "float"
                },
                "workPriority": {
                    "type": "string"
                },
                "workType": {
                    "type": "string"
                },
                "actualDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "agreement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    }
                },
                "appointment": {
                    "$ref": "#/definitions/AppointmentRef"
                },
                "currentDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "deliveryTimeSlot": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "note": {
                    "$ref": "#/definitions/Note"
                },
                "place": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedPlaceRefOrValue"
                    }
                },
                "plannedDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "quantity": {
                    "$ref": "#/definitions/Quantity"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "scheduledDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "state": {
                    "$ref": "#/definitions/WorkStateType"
                },
                "work": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkRefOrValue"
                    }
                },
                "workCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "workOrderItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedWorkOrderItem"
                    }
                },
                "workPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkPrice"
                    }
                },
                "workRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkRelationship"
                    }
                },
                "workSpecification": {
                    "$ref": "#/definitions/WorkSpecificationRef"
                },
                "workforceEmployeeAssignment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkforceEmployeeAssignment"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },

        "WorkPrice": {
            "type": "object",
            "description": "An amount, usually of money, that represents the actual price paid by the Customer for this item or this order.",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail the semantics of this shipment price."
                },
                "name": {
                    "type": "string",
                    "description": "A short descriptive name such as \"Subscription price\"."
                },
                "recurringChargePeriod": {
                    "type": "string",
                    "description": "Could be month, week..."
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Could be minutes, GB..."
                },
                "billingAccount": {
                    "$ref": "#/definitions/BillingAccountRef"
                },
                "price": {
                    "$ref": "#/definitions/Price"
                },
                "priceAlteration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PriceAlteration"
                    }
                },
                "priceType": {
                    "$ref": "#/definitions/PriceType"
                },
                "productOfferingPrice": {
                    "$ref": "#/definitions/ProductOfferingPriceRef"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },

        "WorkRelationship": {
            "type": "object",
            "required": [
                "relationshipType"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "relationshipType": {
                    "type": "string"
                },
                "work": {
                    "$ref": "#/definitions/WorkRefOrValue"
                },
                "workRelationshipCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkSpecification": {
            "type": "object",
            "description": "Definition of the nature of a Work Unit. For example, could be wiring, equipment installation, etc.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the specification"
                },
                "isAppointmentRequired": {
                    "type": "boolean"
                },
                "isBundle": {
                    "type": "boolean",
                    "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the last update of the specification"
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status of this catalog item"
                },
                "name": {
                    "type": "string",
                    "description": "Name given to the specification"
                },
                "version": {
                    "type": "string",
                    "description": "specification version"
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttachmentRefOrValue"
                    },
                    "description": "Attachments that may be of relevance to this specification, such as picture, document, media"
                },
                "constraint": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConstraintRef"
                    },
                    "description": "This is a list of constraint references applied to this specification"
                },
                "entitySpecRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EntitySpecificationRelationship"
                    },
                    "description": "Relationship to another specification"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    },
                    "description": "Parties who manage or otherwise have an interest in this specification"
                },
                "specCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CharacteristicSpecification"
                    },
                    "description": "List of characteristics that the entity can take"
                },
                "targetEntitySchema": {
                    "$ref": "#/definitions/TargetEntitySchema",
                    "description": "Pointer to a schema that defines the target entity"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period for which this REST resource is valid"
                },
                "workSpecRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkSpecificationRelationship"
                    },
                    "description": "Relationship to another work specification, might be dependency, substitution, etc.\r\n"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },

        "WorkSpecificationRelationship": {
            "type": "object",
            "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
            "required": [
                "relationshipType"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "The name given to the target entity specification instance"
                },
                "relationshipType": {
                    "type": "string",
                    "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                },
                "role": {
                    "type": "string",
                    "description": "The association role for this entity specification"
                },
                "associationSpec": {
                    "$ref": "#/definitions/AssociationSpecificationRef",
                    "description": "A specification for an association used by this relationship\r\n"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period for which this REST resource is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "WorkStateType": {
            "type": "string",
            "description": "",
            "enum": [
                "acknowledged",
                "rejected",
                "pending",
                "held",
                "inProgress",
                "cancelled",
                "completed",
                "failed",
                "partial"
            ]
        },
        "WorkforceEmployeeAssignment": {
            "type": "object",
            "description": "Represents an assignment of a particular WorforceEmployeeRole for a particular unit of work in a specific timeframe. For example, assignment of a person in a network engineer role to a trouble shooting unit of work for at least 2 hours. The assignment is associated with a TimeSlot.",
            "required": [
                "description",
                "id",
                "skillType",
                "workforceEmployee"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "skillType": {
                    "type": "string",
                    "description": "Ex: primarySkill, secondarySkill"
                },
                "state": {
                    "$ref": "#/definitions/WorkforceEmployeeAssignmentStateType",
                    "description": "Ex: primarySkill, secondarySkill"
                },
                "timeSlot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSlot"
                    }
                },
                "workforceEmployee": {
                    "$ref": "#/definitions/PartyRefOrValue"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkforceEmployeeAssignmentStateType": {
            "type": "string",
            "description": "",
            "enum": [
                "acknowledged",
                "rejected",
                "pending",
                "held",
                "inProgress",
                "cancelled",
                "completed",
                "failed",
                "partial"
            ]
        },
        "EventSubscription": {
            "type": "object",
            "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
            "required": [
                "id",
                "callback"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of the listener"
                },
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        },
        "EventSubscriptionInput": {
            "type": "object",
            "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
            "required": [
                "callback"
            ],
            "properties": {
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        },

    }
}
