{
  "components": {
    "schemas": {
      "Addressable": {
        "type": "object",
        "description": "Base schema for adressable entities",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink reference"
          },
          "id": {
            "type": "string",
            "description": "unique identifier"
          }
        },
        "required": [
          "id",
          "href"
        ]
      },
      "AnyValue": {
        "nullable": true,
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          },
          {
            "type": "number"
          },
          {
            "type": "boolean"
          },
          {
            "type": "object"
          },
          {
            "type": "array"
          }
        ]
      },
      "Attachment": {
            "type": "object",
            "description": "Complements the description of an element (for instance a product) through video, pictures...",
            "properties": {
                "id": {
                    "example": "4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "description": "Unique identifier for this particular attachment"
                },
                "href": {
                    "example": "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "format": "uri",
                    "description": "URI for this Attachment"
                },
                "attachmentType": {
                    "example": "video",
                    "type": "string",
                    "description": "Attachment type such as video, picture"
                },
                "content": {
                    "type": "string",
                    "format": "base64",
                    "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "description": {
                    "example": "Photograph of the Product",
                    "type": "string",
                    "description": "A narrative text describing the content of the attachment"
                },
                "mimeType": {
                    "type": "string",
                    "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attachment"
                },
                "url": {
                    "example": "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "format": "uri",
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                },
                "size": {
                    "$ref": "#/definitions/Quantity",
                    "description": "The size of the attachment."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
      "BaseEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Base event with common attributes.",
            "properties": {
              "event": {
                "type": "object"
              },
              "eventId": {
                "type": "string",
                "description": "The identifier of the notification."
              },
              "eventTime": {
                "type": "string",
                "format": "date-time",
                "description": "Time of the event occurrence."
              },
              "eventType": {
                "type": "string",
                "description": "The type of the notification."
              },
              "correlationId": {
                "type": "string",
                "description": "The correlation id for this event."
              },
              "domain": {
                "type": "string",
                "description": "The domain of the event."
              },
              "title": {
                "type": "string",
                "description": "The title of the event."
              },
              "description": {
                "type": "string",
                "description": "An explanatory of the event."
              },
              "priority": {
                "type": "string",
                "description": "A priority."
              },
              "timeOcurred": {
                "type": "string",
                "format": "date-time",
                "description": "The time the event occured."
              }
            }
          }
        ],
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "BaseEvent": "#/components/schemas/BaseEvent"
          }
        }
      },
      "ContactMedium": {
            "type": "object",
            "description": "Indicates the contact medium that could be used to contact the party.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "mediumType": {
                    "type": "string",
                    "description": "Type of the contact medium, such as: email address, telephone number, postal address"
                },
                "preferred": {
                    "type": "boolean",
                    "description": "If true, indicates that is the preferred contact medium"
                },
                "characteristic": {
                    "$ref": "#/definitions/MediumCharacteristic",
                    "description": "Any additional characteristic(s) of this contact medium"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The time period that the contact medium is valid for"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
      "MediumCharacteristic": {
            "type": "object",
            "description": "Describes the contact medium characteristics that could be used to contact a party (an individual or an organization)",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "city": {
                    "type": "string",
                    "description": "The city"
                },
                "contactType": {
                    "type": "string",
                    "description": "The type of contact, for example: phone number such as mobile, fixed home, fixed office. postal address such as shipping instalationâ€¦"
                },
                "country": {
                    "type": "string",
                    "description": "The country"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "Full email address in standard format"
                },
                "faxNumber": {
                    "type": "string",
                    "description": "The fax number of the contact"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "The primary phone number of the contact"
                },
                "postCode": {
                    "type": "string",
                    "description": "Postcode"
                },
                "socialNetworkId": {
                    "type": "string",
                    "description": "Identifier as a member of a social network"
                },
                "stateOrProvince": {
                    "type": "string",
                    "description": "State or province"
                },
                "street1": {
                    "type": "string",
                    "description": "Describes the street"
                },
                "street2": {
                    "type": "string",
                    "description": "Complementary street description"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
      "Money": {
            "type": "object",
            "description": "A base / value business entity used to represent money",
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                },
                "value": {
                    "type": "number",
                    "format": "float",
                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type"
                }
            }
        },
      "Place": {
            "type": "object",
            "description": "Place reference. Place defines the places where the products are sold or delivered.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the place"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the place"
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
      "Price": {
            "type": "object",
            "description": "Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Percentage to apply for ProdOfferPriceAlteration"
                },
                "taxRate": {
                    "type": "number",
                    "format": "float",
                    "description": "Tax rate"
                },
                "dutyFreeAmount": {
                    "$ref": "#/definitions/Money",
                    "description": "All taxes excluded amount (expressed in the given currency)"
                },
                "taxIncludedAmount": {
                    "$ref": "#/definitions/Money",
                    "description": "All taxes included amount (expressed in the given currency)"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "PriceAlteration": {
            "type": "object",
            "description": "Is an amount, usually of money, that modifies the price charged for an order item.",
            "required": [
                "price",
                "priceType"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "applicationDuration": {
                    "type": "integer",
                    "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail the semantics of this order item price alteration"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the order item price alteration"
                },
                "priceType": {
                    "type": "string",
                    "description": "A category that describes the price such as recurring, one time and usage."
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                },
                "recurringChargePeriod": {
                    "type": "string",
                    "description": "Could be month, week..."
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Could be minutes, GB..."
                },
                "price": {
                    "$ref": "#/definitions/Price"
                },
                "productOfferingPrice": {
                    "$ref": "#/definitions/ProductOfferingPriceRef"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "PriceType": {
            "type": "string",
            "description": "Describes the type of price (ex: oneTime, recurring, etc)",
            "enum": [
                "recurring",
                "oneTime",
                "usage"
            ]
        },
      "Quantity": {
            "type": "object",
            "description": "An amount in a given unit",
            "properties": {
                "amount": {
                    "default": 1,
                    "type": "number",
                    "format": "float",
                    "description": "Numeric value in a given unit"
                },
                "units": {
                    "type": "string",
                    "description": "Unit"
                }
            }
        },
      "Characteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Describes a given characteristic of an object or entity through a name/value pair.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "valueType": {
                "type": "string",
                "description": "Data type of the value of the characteristic"
              },
              "characteristicRelationship": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicRelationship"
                }
              },
              "name": {
                "type": "string",
                "description": "Name of the characteristic"
              }
            }
          }
        ],
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Characteristic": "#/components/schemas/Characteristic"
          }
        }
      },
      "CharacteristicRelationship": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Another Characteristic that is related to the current Characteristic;",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "relationshipType": {
                "type": "string",
                "description": "The type of relationship"
              }
            }
          }
        ],
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "CharacteristicRelationship": "#/components/schemas/CharacteristicRelationship"
          }
        }
      },
      "Entity": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          }
        ]
      },
      "EntityRef": {
        "type": "object",
        "description": "Entity reference schema to be use for all entityRef class.",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink reference"
          }
        }
      },
      "Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "event with common attributes.",
            "properties": {
              "href": {
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "type": "string",
                "description": "unique identifier"
              },
              "correlationId": {
                "type": "string",
                "description": "The correlation id for this event."
              },
              "domain": {
                "type": "string",
                "description": "The domain of the event."
              },
              "title": {
                "type": "string",
                "description": "The title of the event."
              },
              "description": {
                "type": "string",
                "description": "An explnatory of the event."
              },
              "priority": {
                "type": "string",
                "description": "A priority."
              },
              "timeOccurred": {
                "type": "string",
                "format": "date-time",
                "description": "The time the event occurred."
              },
              "source": {
                "$ref": "#/components/schemas/EntityRef"
              },
              "reportingSystem": {
                "$ref": "#/components/schemas/EntityRef"
              },
              "relatedParty": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelatedParty"
                }
              },
              "analyticCharacteristic": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Characteristic"
                }
              },
              "eventId": {
                "type": "string",
                "description": "The identifier of the notification."
              },
              "eventTime": {
                "type": "string",
                "format": "date-time",
                "description": "Time of the event occurrence."
              },
              "eventType": {
                "type": "string",
                "description": "The type of the notification."
              },
              "event": {
                "description": "The event linked to the involved resource object",
                "type": "object"
              }
            }
          }
        ]
      },
      "Extensible": {
        "type": "object",
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type",
        "properties": {
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        },
        "required": [
          "@type"
        ]
      },
      "Note": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Extra information about a given entity",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the note within its containing entity",
                "example": [
                  "afa9-3d90aaa8da0f"
                ]
              },
              "author": {
                "type": "string",
                "description": "Author of the note",
                "example": [
                  "Mr. N. Bene"
                ]
              },
              "date": {
                "type": "string",
                "format": "date-time",
                "description": "Date of the note",
                "example": [
                  "2020-11-20T08:00:00Z"
                ]
              },
              "text": {
                "type": "string",
                "description": "Text of the note",
                "example": [
                  "This is important"
                ]
              }
            }
          }
        ],
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Note": "#/components/schemas/Note"
          }
        }
      },
      "Reference": {
        "type": "object",
        "description": "Reference schema .",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the referred entity."
          },
          "name": {
            "type": "string",
            "description": "Name of the referred entity."
          },
          "@referredType": {
            "type": "string",
            "description": "The actual type of the target instance when needed for disambiguation."
          }
        },
        "required": [
          "id"
        ]
      },
      "RelatedParty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "type": "object",
            "description": "Related Entity reference. A related party defines party linked to a specific entity.",
            "properties": {
              "role": {
                "type": "string",
                "description": "Role played by the related party"
              }
            }
          }
        ],
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "RelatedParty": "#/components/schemas/RelatedParty"
          }
        }
      },
      "TimePeriod": {
        "type": "object",
        "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
        "properties": {
          "startDateTime": {
            "description": "Start of the time period, using IETC-RFC-3339 format",
            "type": "string",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          },
          "endDateTime": {
            "description": "End of the time period, using IETC-RFC-3339 format",
            "type": "string",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          }
        }
      },
      "Error": {
        "discriminator": {
          "propertyName": "@type",
          "mapping": {
            "Error": "#/components/schemas/Error"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "required": [
              "code",
              "reason"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Application relevant detail, defined in the API or a common list."
              },
              "reason": {
                "type": "string",
                "description": "Explanation of the reason for the error which can be shown to a client user."
              },
              "message": {
                "type": "string",
                "description": "More details and corrective actions related to the error which can be shown to a client user."
              },
              "status": {
                "type": "string",
                "description": "HTTP Error code extension"
              },
              "referenceError": {
                "type": "string",
                "description": "URI of documentation describing the error."
              }
            }
          }
        ],
        "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)"
      }
    }
  }
}
