{
    
    "paths": {
        "/checkWorkQualification": {},
        "/checkWorkQualification/{id}": {},
        "/queryWorkQualification": {},
        "/queryWorkQualification/{id}": {}
        
    },
    "definitions": {
        "AlternateWorkProposal": {
            "type": "object",
            "description": "Alternate work proposal is used when the requested unit of work is not valid as specified in the request. An alternate proposal could be a distinct workSpecification close to the requested one or the same specification as requested but with a different parameters.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an alternate work proposal"
                },
                "alternateWorkDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Alternate date where the work could take place in case the expected date cannot be met."
                },
                "alternateWork": {
                    "$ref": "#/definitions/WorkRefOrValue"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
       
        
        
        "CheckWorkQualification": {
            "type": "object",
            "description": "CheckWorkQualification is used to validate specific units of work",
            "required": [
                "workQualificationItem"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "checkWorkQualificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the workQualification was submitted"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the qualification"
                },
                "effectiveQualificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Effective date to qualification completion"
                },
                "estimatedResponseDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the requester expect to provide an answer for the qualification request."
                },
                "expectedQualificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "A date (DateTime). Deadline date when the requester expected a qualification answer."
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the qualification response expires"
                },
                "externalId": {
                    "type": "string",
                    "description": "Identifier provided by the requester"
                },
                "instantSyncQualification": {
                    "type": "boolean",
                    "description": "An indicator which when the value is \"true\" means that requester expects to get qualifcation result immediately in the response. If the indicator is true then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201."
                },
                "provideAlternative": {
                    "default": false,
                    "type": "boolean",
                    "description": "When the value is TRUE means that alternative solutions should be provided"
                },
                "provideUnavailabilityReason": {
                    "default": false,
                    "type": "boolean",
                    "description": "When the value is TRUE means that unavailability reason are expected for non available units of work."
                },
                "qualificationResult": {
                    "type": "string",
                    "description": "Qualification result for this workQualification. It could be:  qualified (all qualification item are qualified), alternate (At least one item alternate and no item with  unqualified), unqualified (At least one item unqualified)"
                },
                "place": {
                    "$ref": "#/definitions/PlaceRefOrValue"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    },
                    "description": "A list of related party references, defines party or party role linked to this request."
                },
                "state": {
                    "$ref": "#/definitions/TaskStateType",
                    "description": "State of the workQualification (acknowledged, inProgress, terminatedWithError, done)"
                },
                "workQualificationItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CheckWorkQualificationItem"
                    },
                    "minItems": 1
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },

        "CheckWorkQualificationItem": {
            "type": "object",
            "description": "A WorkQualificationItem relates to a specific unit of work being checked in a qualification operation.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of the Work Qualification Item"
                },
                "expectedWorkDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date when the work is expected to take place"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the qualification item response expires"
                },
                "qualificationResult": {
                    "type": "string",
                    "description": "Qualification result for workQualification item. It could be: - qualified (requested unit of work is valid), - unqualified (requested unit of work not valid and not alternative available), - alternate (requested unit of work not valid but alternate proposal available)"
                },
                "state": {
                    "type": "string",
                    "description": "State of the qualification item (acknowledged, inProgress, terminatedWithError, done)"
                },
                "alternateWorkProposal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlternateWorkProposal"
                    }
                },
                "eligibilityUnavailabilityReason": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EligibilityUnavailabilityReason"
                    }
                },
                "qualificationItemRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkQualificationItemRelationship"
                    }
                },
                "qualificationRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkQualificationRelationship"
                    }
                },
                "terminationError": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TerminationError"
                    },
                    "description": "If qualificationItem has not been done properly this lists the error(s) that caused termination of the qualification."
                },
                "work": {
                    "$ref": "#/definitions/WorkRefOrValue",
                    "description": "Work structure that allows to identify the unit of work'S composition, its Specification and Characteristics."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        
        "EligibilityUnavailabilityReason": {
            "type": "object",
            "description": "Reason for eligibility result if the productOfferingQualification result is no (meaning the productOffering or productSpec is not available).",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "code": {
                    "type": "string",
                    "description": "Unavailability reason code."
                },
                "label": {
                    "type": "string",
                    "description": "Unavailability reason label."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },

        "ExternalReference": {
            "type": "object",
            "description": "External reference of the individual or reference in other system",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "externalReferenceType": {
                    "type": "string",
                    "description": "Type of the external reference"
                },
                "name": {
                    "type": "string",
                    "description": "External reference name"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        

        "PartyCreditProfile": {
            "type": "object",
            "description": "An individual might be evaluated for its worthiness and this evaluation might be based on a credit rating given by a credit agency.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "creditAgencyName": {
                    "type": "string",
                    "description": "Name of the credit agency giving the score"
                },
                "creditAgencyType": {
                    "type": "string",
                    "description": "Type of the credit agency giving the score"
                },
                "ratingReference": {
                    "type": "string",
                    "description": "Reference corresponding to the credit rating"
                },
                "ratingScore": {
                    "type": "integer",
                    "description": "A measure of a party’s creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },

        "QueryWorkQualification": {
            "type": "object",
            "description": "QueryWorkQualification is used to retrieve a list of units of work that are valid in the context of the interaction",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the qualification"
                },
                "effectiveQualificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Effective date to qualification completion"
                },
                "estimatedResponseDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the requester expect to provide an answer for the qualification request."
                },
                "expectedQualificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "A date (DateTime). Deadline date when the requester expected a qualification answer."
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the qualification response expires"
                },
                "externalId": {
                    "type": "string",
                    "description": "Identifier provided by the requester"
                },
                "instantSyncQualification": {
                    "type": "boolean",
                    "description": "An indicator which when the value is \"true\" means that requester expects to get qualifcation result immediately in the response. If the indicator is true then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201."
                },
                "queryWorkQualificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the workQualification was submitted"
                },
                "place": {
                    "$ref": "#/definitions/PlaceRefOrValue"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    },
                    "description": "A list of related party references, defines party or party role linked to this request."
                },
                "searchCriteria": {
                    "$ref": "#/definitions/WorkQualificationItem"
                },
                "state": {
                    "$ref": "#/definitions/TaskStateType",
                    "description": "State of the workQualification (acknowledged, inProgress, terminatedWithError, done)"
                },
                "workQualificationItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkQualificationItem"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },

        "RelatedWorkOrderItem": {
            "type": "object",
            "description": "RelatedWorkOrderItem (WorkOrder item). The work order item which triggered this unit of work's creation/change/termination.",
            "required": [
                "orderItemId",
                "workOrderId"
            ],
            "properties": {
                "orderItemAction": {
                    "type": "string",
                    "description": "Action of the order item for this unit of work\r\n"
                },
                "orderItemId": {
                    "type": "string",
                    "description": "Identifier of the work order item where the unit of work was managed"
                },
                "role": {
                    "type": "string",
                    "description": "Role of the work order item for this unitof work\r\n"
                },
                "workOrderHref": {
                    "type": "string",
                    "description": "Reference of the related entity."
                },
                "workOrderId": {
                    "type": "string",
                    "description": "Unique identifier of a related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "TaskStateType": {
            "type": "string",
            "description": "Possible values for the state of a task",
            "enum": [
                "accepted",
                "terminatedWithError",
                "inProgress",
                "done"
            ]
        },
        "TaxDefinition": {
            "type": "object",
            "description": "Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. There are many different types of tax (Federal Tax levied by the US Government, State Tax levied by the State of California,…).",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the tax."
                },
                "jurisdictionLevel": {
                    "example": "Country",
                    "type": "string",
                    "description": "Level of the jurisdiction that levies the tax"
                },
                "jurisdictionName": {
                    "example": "USA",
                    "type": "string",
                    "description": "Name of the jurisdiction that levies the tax"
                },
                "name": {
                    "type": "string",
                    "description": "Tax name."
                },
                "taxType": {
                    "example": "VAT",
                    "type": "string",
                    "description": "Type of the tax."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the tax applies, might be set for example if it is known that the jurisdiction will cease to apply the tax after a certain date."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "TaxExemptionCertificate": {
            "type": "object",
            "description": "A tax exemption certificate represents a tax exemption granted to a party (individual or organization) by a tax jurisdiction which may be a city, state, country,... An exemption has a certificate identifier (received from the jurisdiction that levied the tax) and a validity period. An exemption is per tax types and determines for each type of tax what portion of the tax is exempted (partial by percentage or complete) via the tax definition.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the tax exemption within list of the exemptions"
                },
                "certificateNumber": {
                    "type": "string",
                    "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                },
                "issuingJurisdiction": {
                    "example": "USA",
                    "type": "string",
                    "description": "Name of the jurisdiction that issued the exemption"
                },
                "reason": {
                    "type": "string",
                    "description": "Reason for the tax exemption"
                },
                "attachment": {
                    "$ref": "#/definitions/AttachmentRefOrValue",
                    "description": "The actual certificate contents, if such is supplied by the issuing jurisdiction"
                },
                "taxDefinition": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaxDefinition"
                    },
                    "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%)."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the exemption is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "TerminationError": {
            "type": "object",
            "description": "This indicates an error that caused a qualificationItem to be terminated.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the termination error"
                },
                "value": {
                    "type": "string",
                    "description": "Text to describe the termination error - for example: Unable to proceed to qualification because incomplete information provided"
                }
            }
        },
        "TimeSlot": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the TimeSlot"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the TimeSlot"
                },
                "relatedParty": {
                    "$ref": "#/definitions/RelatedParty",
                    "description": "RelatedParty reference. A related party defines party or party role linked to a specific entity."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "Start date and end date of the timeSlot"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "Work": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "completionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the order was completed"
                },
                "description": {
                    "type": "string",
                    "description": "Is the description of the work unit. It could be the same as the description of the work specification."
                },
                "expectedCompletionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the requester expects the work to be completed"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the work unit. It could be the same as the name of the work specification."
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date at which the work order which triggered this unit of work's creation/change/termination was created."
                },
                "percentageComplete": {
                    "type": "number",
                    "format": "float"
                },
                "workPriority": {
                    "type": "string"
                },
                "workType": {
                    "type": "string"
                },
                "actualDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "agreement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    }
                },
                "appointment": {
                    "$ref": "#/definitions/AppointmentRef"
                },
                "currentDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "deliveryTimeSlot": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "note": {
                    "$ref": "#/definitions/Note"
                },
                "place": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedPlaceRefOrValue"
                    }
                },
                "plannedDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "quantity": {
                    "$ref": "#/definitions/Quantity"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "scheduledDuration": {
                    "$ref": "#/definitions/Quantity"
                },
                "state": {
                    "$ref": "#/definitions/WorkStateType"
                },
                "work": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkRefOrValue"
                    }
                },
                "workCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "workOrderItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedWorkOrderItem"
                    }
                },
                "workPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkPrice"
                    }
                },
                "workRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkRelationship"
                    }
                },
                "workSpecification": {
                    "$ref": "#/definitions/WorkSpecificationRef"
                },
                "workforceEmployeeAssignment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkforceEmployeeAssignment"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkEligibilityUnavailabilityReason": {
            "type": "object",
            "description": "Reason for eligibility result if the WorkQualification result is no (meaning the Unit of Work is not valid)",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Unavailability reason code"
                },
                "label": {
                    "type": "string",
                    "description": "Unavailability reason label"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkPrice": {
            "type": "object",
            "description": "An amount, usually of money, that represents the actual price paid by the Customer for this item or this order.",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail the semantics of this shipment price."
                },
                "name": {
                    "type": "string",
                    "description": "A short descriptive name such as \"Subscription price\"."
                },
                "recurringChargePeriod": {
                    "type": "string",
                    "description": "Could be month, week..."
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Could be minutes, GB..."
                },
                "billingAccount": {
                    "$ref": "#/definitions/BillingAccountRef"
                },
                "price": {
                    "$ref": "#/definitions/Price"
                },
                "priceAlteration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PriceAlteration"
                    }
                },
                "priceType": {
                    "$ref": "#/definitions/PriceType"
                },
                "productOfferingPrice": {
                    "$ref": "#/definitions/ProductOfferingPriceRef"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkQualification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the qualification"
                },
                "effectiveQualificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Effective date to qualification completion"
                },
                "estimatedResponseDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the requester expect to provide an answer for the qualification request."
                },
                "expectedQualificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "A date (DateTime). Deadline date when the requester expected a qualification answer."
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the qualification response expires"
                },
                "externalId": {
                    "type": "string",
                    "description": "Identifier provided by the requester"
                },
                "instantSyncQualification": {
                    "type": "boolean",
                    "description": "An indicator which when the value is \"true\" means that requester expects to get qualifcation result immediately in the response. If the indicator is true then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201."
                },
                "place": {
                    "$ref": "#/definitions/PlaceRefOrValue"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    },
                    "description": "A list of related party references, defines party or party role linked to this request."
                },
                "state": {
                    "$ref": "#/definitions/TaskStateType",
                    "description": "State of the workQualification (acknowledged, inProgress, terminatedWithError, done)"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkQualificationItem": {
            "type": "object",
            "description": "A WorkQualificationItem relates to a specific unit of work being checked in a qualification operation.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of the Work Qualification Item"
                },
                "expectedWorkDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date when the work is expected to take place"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the qualification item response expires"
                },
                "eligibilityUnavailabilityReason": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EligibilityUnavailabilityReason"
                    }
                },
                "work": {
                    "$ref": "#/definitions/WorkRefOrValue",
                    "description": "Work structure that allows to identify the unit of work'S composition, its Specification and Characteristics."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkQualificationItemRelationship": {
            "type": "object",
            "description": "Structure used to describe relationship between WorkQualification items from the same WorkQualification .",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of the workQualificationItem (from the same workQualification)."
                },
                "relationshipType": {
                    "type": "string",
                    "description": "Type of relationship (ex: reliesOn, connectedTo, etc...)"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkQualificationRelationship": {
            "type": "object",
            "description": "Structure used to describe relationship between WorkQualification item from the same WorkQualification.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the target qualification pointed to by this relationship"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "relationshipType": {
                    "type": "string",
                    "description": "The type of relationship"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },

        "WorkRelationship": {
            "type": "object",
            "required": [
                "relationshipType"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "relationshipType": {
                    "type": "string"
                },
                "work": {
                    "$ref": "#/definitions/WorkRefOrValue"
                },
                "workRelationshipCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkStateType": {
            "type": "string",
            "description": "",
            "enum": [
                "acknowledged",
                "rejected",
                "pending",
                "held",
                "inProgress",
                "cancelled",
                "completed",
                "failed",
                "partial"
            ]
        },
        "WorkforceEmployeeAssignment": {
            "type": "object",
            "description": "Represents an assignment of a particular WorforceEmployeeRole for a particular unit of work in a specific timeframe. For example, assignment of a person in a network engineer role to a trouble shooting unit of work for at least 2 hours. The assignment is associated with a TimeSlot.",
            "required": [
                "description",
                "id",
                "skillType",
                "workforceEmployee"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "skillType": {
                    "type": "string",
                    "description": "Ex: primarySkill, secondarySkill"
                },
                "state": {
                    "$ref": "#/definitions/WorkforceEmployeeAssignmentStateType",
                    "description": "Ex: primarySkill, secondarySkill"
                },
                "timeSlot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSlot"
                    }
                },
                "workforceEmployee": {
                    "$ref": "#/definitions/PartyRefOrValue"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "WorkforceEmployeeAssignmentStateType": {
            "type": "string",
            "description": "",
            "enum": [
                "acknowledged",
                "rejected",
                "pending",
                "held",
                "inProgress",
                "cancelled",
                "completed",
                "failed",
                "partial"
            ]
        },
        "EventSubscription": {
            "type": "object",
            "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
            "required": [
                "id",
                "callback"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of the listener"
                },
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        },
        "EventSubscriptionInput": {
            "type": "object",
            "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
            "required": [
                "callback"
            ],
            "properties": {
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        }
    }
}
